/*
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.SendbirdBasicUserInfo;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SendbirdOpenChannel
 */
public class SendbirdOpenChannelTest {
    private final SendbirdOpenChannel model = new SendbirdOpenChannel();

    /**
     * Model tests for SendbirdOpenChannel
     */
    @Test
    public void testSendbirdOpenChannel() {
        // TODO: test SendbirdOpenChannel
    }

    /**
     * Test the property 'channelUrl'
     */
    @Test
    public void channelUrlTest() {
        // TODO: test channelUrl
    }

    /**
     * Test the property 'coverUrl'
     */
    @Test
    public void coverUrlTest() {
        // TODO: test coverUrl
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'customType'
     */
    @Test
    public void customTypeTest() {
        // TODO: test customType
    }

    /**
     * Test the property 'data'
     */
    @Test
    public void dataTest() {
        // TODO: test data
    }

    /**
     * Test the property 'freeze'
     */
    @Test
    public void freezeTest() {
        // TODO: test freeze
    }

    /**
     * Test the property 'isDynamicPartitioned'
     */
    @Test
    public void isDynamicPartitionedTest() {
        // TODO: test isDynamicPartitioned
    }

    /**
     * Test the property 'isEphemeral'
     */
    @Test
    public void isEphemeralTest() {
        // TODO: test isEphemeral
    }

    /**
     * Test the property 'maxLengthMessage'
     */
    @Test
    public void maxLengthMessageTest() {
        // TODO: test maxLengthMessage
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'operators'
     */
    @Test
    public void operatorsTest() {
        // TODO: test operators
    }

    /**
     * Test the property 'participantCount'
     */
    @Test
    public void participantCountTest() {
        // TODO: test participantCount
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

}
