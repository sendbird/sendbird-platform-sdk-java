/*
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.sendbird.client.api;

import org.sendbird.client.*;
import org.sendbird.client.auth.*;
import org.openapitools.client.model.BlockAUserRequest;
import org.openapitools.client.model.BlockAUserResponse;
import org.openapitools.client.model.FreezeAGroupChannelRequest;
import org.openapitools.client.model.FreezeAnOpenChannelRequest;
import org.openapitools.client.model.ListBlockedUsersResponse;
import org.openapitools.client.model.SendbirdGroupChannelDetail;
import org.openapitools.client.model.SendbirdOpenChannel;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ModerationApi
 */
public class ModerationApiTest {

    private final ModerationApi api = new ModerationApi();

    /**
     * Block a user
     *
     * ## Block a user  A user can block another user if the user doesn&#39;t wish to receive any messages or notifications from the blocked user in a 1-to-1 group channel. In a 1-to-N group channel, the user can still receive messages from the blocked user, but this depends on the UI settings of the chat view. In any case, notifications from the blocked user won&#39;t be delivered to the 1-to-N group channel. You can choose whether or not the user can view [which users are blocked](https://sendbird.com/docs/chat/platform-api/v3/moderation/listing-blocked-and-blocking-users/list-blocked-and-blocking-users) in the channel UI.  Sendbird application provides two blocking options: include or exclude blocked users when sending invitations, and turn on or off notifications from blocked users. [Explicit and classic block modes](https://sendbird.com/docs/chat/platform-api/v3/deprecated#2-explicit-and-classic-block-modes) have been deprecated and are only supported for customers who started using them before they were deprecated.  - **Include or exclude blocked users when sending invitations**: Determines whether or not to automatically filter out blocked users when a user invites a group of users to a new group channel. By default, blocked users are included when sending invitations. The value of this option can be changed by Sendbird if your Sendbird application isn&#39;t integrated to the client app. If you want to change the value, [contact our sales team](https://get.sendbird.com/talk-to-sales.html).      - **Turn on or off notifications from blocked users**: Determines whether or not to receive message notifications from the blocked user in a specific 1-to-N group channel where they are both members. By default, a user doesn&#39;t receive notifications from blocked users. The value of this option can be set individually per channel. If you want to use this option, [contact our sales team](https://get.sendbird.com/talk-to-sales.html).       &gt; **Note**: To learn more about other available moderation tools, see [Moderation Overview](https://sendbird.com/docs/chat/platform-api/v3/moderation/moderation-overview#2-actions).      The following tables explain what happens to a user&#39;s chat experience when the user blocks another user in a 1-to-1 or 1-to-N group channel. In the case of a 1-to-1 group channel, the block mode is only maintained with the original members. If other than the original members are added, the rules for 1-to-N group channel begin to apply.  [https://sendbird.com/docs/chat/platform-api/v3/moderation/blocking-users/block-users#1-block-users](https://sendbird.com/docs/chat/platform-api/v3/moderation/blocking-users/block-users#1-block-users)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockAUserTest() throws ApiException {
        //String userId = null;
        //String apiToken = null;
        //BlockAUserRequest blockAUserRequest = null;
        //BlockAUserResponse response = api.blockAUser(userId)
        //        .apiToken(apiToken)
        //        .blockAUserRequest(blockAUserRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Freeze a group channel
     *
     * ## Freeze a group channel  Freezes or unfreezes a group channel.  &gt; **Note**: To learn more about other available moderation tools, see [Moderation Overview](https://sendbird.com/docs/chat/platform-api/v3/moderation/moderation-overview#2-actions).      [https://sendbird.com/docs/chat/platform-api/v3/moderation/freezing-a-channel/freeze-a-group-channel#1-freeze-a-group-channel](https://sendbird.com/docs/chat/platform-api/v3/moderation/freezing-a-channel/freeze-a-group-channel#1-freeze-a-group-channel)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void freezeAGroupChannelTest() throws ApiException {
        //String channelUrl = null;
        //String apiToken = null;
        //FreezeAGroupChannelRequest freezeAGroupChannelRequest = null;
        //SendbirdGroupChannelDetail response = api.freezeAGroupChannel(channelUrl)
        //        .apiToken(apiToken)
        //        .freezeAGroupChannelRequest(freezeAGroupChannelRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Freeze an open channel
     *
     * ## Freeze an open channel  Freezes or unfreezes an open channel.  &gt; **Note**: To learn more about other available moderation tools, see [Moderation Overview](https://sendbird.com/docs/chat/platform-api/v3/moderation/moderation-overview#2-actions).      [https://sendbird.com/docs/chat/platform-api/v3/moderation/freezing-a-channel/freeze-an-open-channel#1-freeze-an-open-channel](https://sendbird.com/docs/chat/platform-api/v3/moderation/freezing-a-channel/freeze-an-open-channel#1-freeze-an-open-channel)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void freezeAnOpenChannelTest() throws ApiException {
        //String channelUrl = null;
        //String apiToken = null;
        //FreezeAnOpenChannelRequest freezeAnOpenChannelRequest = null;
        //SendbirdOpenChannel response = api.freezeAnOpenChannel(channelUrl)
        //        .apiToken(apiToken)
        //        .freezeAnOpenChannelRequest(freezeAnOpenChannelRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * List blocked users
     *
     * ## List blocked by and blocking users  This action retrieves a list of users who are either blocked by a specific user or a list of users who are blocking a specific user.  [https://sendbird.com/docs/chat/platform-api/v3/moderation/listing-blocked-and-blocking-users/list-blocked-and-blocking-users#1-list-blocked-by-and-blocking-users](https://sendbird.com/docs/chat/platform-api/v3/moderation/listing-blocked-and-blocking-users/list-blocked-and-blocking-users#1-list-blocked-by-and-blocking-users)  &#x60;user_id&#x60;   Type: string   Description: Specifies the unique ID of the target user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listBlockedUsersTest() throws ApiException {
        //String userId = null;
        //String _list = null;
        //String token = null;
        //Integer limit = null;
        //String userIds = null;
        //String metadatakey = null;
        //String metadatavaluesIn = null;
        //String apiToken = null;
        //ListBlockedUsersResponse response = api.listBlockedUsers(userId)
        //        ._list(_list)
        //        .token(token)
        //        .limit(limit)
        //        .userIds(userIds)
        //        .metadatakey(metadatakey)
        //        .metadatavaluesIn(metadatavaluesIn)
        //        .apiToken(apiToken)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Unblock a user
     *
     * ## Unblock a user  Unblocks the user.  https://sendbird.com/docs/chat/platform-api/v3/moderation/blocking-users/unblock-a-user#1-unblock-a-user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unblockAUserTest() throws ApiException {
        //String userId = null;
        //String targetId = null;
        //String apiToken = null;
        //Object response = api.unblockAUser(userId, targetId)
        //        .apiToken(apiToken)
        //        .execute();
        // TODO: test validations
    }

}
