/*
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.sendbird.client.api;

import org.sendbird.client.*;
import org.sendbird.client.auth.*;
import org.openapitools.client.model.AcceptAnInvitationRequest;
import org.openapitools.client.model.CheckIfMemberResponse;
import org.openapitools.client.model.CreateAGroupChannelRequest;
import org.openapitools.client.model.GetAGroupChannelResponse;
import org.openapitools.client.model.GroupChannelListMembersResponse;
import org.openapitools.client.model.GroupChatListChannelsResponse;
import org.openapitools.client.model.HideAChannelRequest;
import org.openapitools.client.model.InviteAsMembersRequest;
import org.openapitools.client.model.InviteAsMembersResponse;
import org.openapitools.client.model.JoinAChannelRequest;
import org.openapitools.client.model.LeaveAChannelRequest;
import org.openapitools.client.model.ListOperatorsResponse;
import org.openapitools.client.model.RegisterOperatorsToAGroupChannelRequest;
import org.openapitools.client.model.ResetChatHistoryRequest;
import org.openapitools.client.model.ResetChatHistoryResponse;
import org.openapitools.client.model.SendbirdGroupChannelDetail;
import org.openapitools.client.model.StartTypingIndicatorsRequest;
import org.openapitools.client.model.UpdateAGroupChannelRequest;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GroupChannelApi
 */
public class GroupChannelApiTest {

    private final GroupChannelApi api = new GroupChannelApi();

    /**
     * Accept an invitation
     *
     * ## Accept an invitation  Accepts an invitation from a group channel for a user to join. A single user may join up to 2,000 group channels, and any invitation to a user who is at capacity will be automatically canceled. See [this page](https://sendbird.com/docs/chat/platform-api/v3/channel/channel-overview#2-channel-types-3-open-channel-vs-group-channel-vs-supergroup-channel) to learn more about channel types.  &gt; **Note**: This action is only available when the &#x60;auto_accept&#x60; property of an application is set to **false**. You can change the value of the property using the [update default channel invitation preference](https://sendbird.com/docs/chat/platform-api/v3/channel/setting-up-channels/update-default-invitation-preference) action, or the [update channel invitation preference](https://sendbird.com/docs/chat/platform-api/v3/channel/managing-a-channel/update-channel-invitation-preference) action.      [https://sendbird.com/docs/chat/platform-api/v3/channel/inviting-a-user/accept-an-invitation-channel#1-accept-an-invitation](https://sendbird.com/docs/chat/platform-api/v3/channel/inviting-a-user/accept-an-invitation-channel#1-accept-an-invitation)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void acceptAnInvitationTest() throws ApiException {
        //String channelUrl = null;
        //String apiToken = null;
        //AcceptAnInvitationRequest acceptAnInvitationRequest = null;
        //SendbirdGroupChannelDetail response = api.acceptAnInvitation(channelUrl)
        //        .apiToken(apiToken)
        //        .acceptAnInvitationRequest(acceptAnInvitationRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Cancel the registration of operators
     *
     * ## Unregister operators from a group channel  You can unregister operators in a group channel but keep them in the channel as members using this API.  https://sendbird.com/docs/chat/platform-api/v3/user/assigning-a-user-role/unregister-operators-from-a-group-channel#1-unregister-operators-from-a-group-channel  &#x60;channel_url&#x60;   Type: string   Description: Specifies the URL of the channel to cancel the registration of operators.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelTheRegistrationOfOperatorsTest() throws ApiException {
        //String channelUrl = null;
        //String operatorIds = null;
        //Boolean deleteAll = null;
        //String apiToken = null;
        //Object response = api.cancelTheRegistrationOfOperators(channelUrl)
        //        .operatorIds(operatorIds)
        //        .deleteAll(deleteAll)
        //        .apiToken(apiToken)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Check if member
     *
     * ## Check if user is a member  Checks if a user is a member of a group channel.  &gt; **Note**: See [this page](https://sendbird.com/docs/chat/platform-api/v3/channel/channel-overview#2-channel-types-3-open-channel-vs-group-channel-vs-supergroup-channel) to learn more about channel types.      [https://sendbird.com/docs/chat/platform-api/v3/channel/listing-users/check-if-user-is-a-member#1-check-if-user-is-a-member](https://sendbird.com/docs/chat/platform-api/v3/channel/listing-users/check-if-user-is-a-member#1-check-if-user-is-a-member)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkIfMemberTest() throws ApiException {
        //String channelUrl = null;
        //String userId = null;
        //String apiToken = null;
        //CheckIfMemberResponse response = api.checkIfMember(channelUrl, userId)
        //        .apiToken(apiToken)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Create a group channel
     *
     * ## Create a group channel  You can create a group channel for 1-to-1 and 1-to-N conversations. By default, group channels are used for conversations between up to 100 members. This number can stretch up to tens of thousands in Supergroup channels. Group channels can either be private and invite only, or public. They support typing indicators, unread count and read receipts, allowing for an interactive chat experience. A user can join up to 2000 group channels, and higher numbers would negatively impact the performance for the end user. The Chat history is turned off by default and its settings can be changed on Sendbird Dashboard by going to Settings &gt; Chat &gt; Channels &gt; Group channels &gt; Chat history. To learn more about group channels, see Channel Overview.  &gt; If you are seeing the error message Maximum \&quot;channel join\&quot; count reached., then consider deleting channels that are no longer used. For situations where an agent connects with many customers such as support, delivery logistics or sales, we recommend using Sendbird Desk.  https://sendbird.com/docs/chat/platform-api/v3/channel/creating-a-channel/create-a-group-channel#1-create-a-group-channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAGroupChannelTest() throws ApiException {
        //String apiToken = null;
        //CreateAGroupChannelRequest createAGroupChannelRequest = null;
        //SendbirdGroupChannelDetail response = api.createAGroupChannel()
        //        .apiToken(apiToken)
        //        .createAGroupChannelRequest(createAGroupChannelRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Delete a group channel
     *
     * ## Delete a group channel  You can delete a group channel or a Supergroup channel using this API. See [this page](https://sendbird.com/docs/chat/platform-api/v3/channel/channel-overview#2-channel-types-3-open-channel-vs-group-channel-vs-supergroup-channel) to learn more about channel types.  [https://sendbird.com/docs/chat/platform-api/v3/channel/managing-a-channel/delete-a-group-channel#1-delete-a-group-channel](https://sendbird.com/docs/chat/platform-api/v3/channel/managing-a-channel/delete-a-group-channel#1-delete-a-group-channel)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAGroupChannelTest() throws ApiException {
        //String channelUrl = null;
        //String apiToken = null;
        //Object response = api.deleteAGroupChannel(channelUrl)
        //        .apiToken(apiToken)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Get a group channel
     *
     * ## Get a group channel  This action retrieves information about a specificÂ [group channel](https://sendbird.com/docs/chat/platform-api/v3/channel/channel-overview#2-channel-types-3-group-channel). You can use the optional query parameters to determine whether to include delivery receipt, read receipt, or member information in the response.  https://sendbird.com/docs/chat/platform-api/v3/channel/listing-channels-in-an-application/get-a-group-channel#1-get-a-group-channel  &#x60;channel_url&#x60;   Type: string   Description: Specifies the URL of the channel to retrieve.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAGroupChannelTest() throws ApiException {
        //String channelUrl = null;
        //Boolean showDeliveryReceipt = null;
        //Boolean showReadReceipt = null;
        //Boolean showMember = null;
        //String memberActiveMode = null;
        //String userId = null;
        //String apiToken = null;
        //GetAGroupChannelResponse response = api.getAGroupChannel(channelUrl)
        //        .showDeliveryReceipt(showDeliveryReceipt)
        //        .showReadReceipt(showReadReceipt)
        //        .showMember(showMember)
        //        .memberActiveMode(memberActiveMode)
        //        .userId(userId)
        //        .apiToken(apiToken)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Hide a channel
     *
     * ## Hide a channel  This action allows you to hide aÂ [group channel](https://sendbird.com/docs/chat/platform-api/v3/channel/channel-overview#2-channel-types-3-group-channel)Â from a user&#39;s channel list. Hiding a channel gives users the ability to archive channels so that they can focus on channels that need the most attention.  With this API, you can allow users to hide a channel from themselves or from all channel members. You can also determine whether to have the channel remain hidden when a new message is sent to the channel. Note that only group channels can be hidden.  [https://sendbird.com/docs/chat/platform-api/v3/channel/managing-a-channel/hide-a-channel#1-hide-a-channel](https://sendbird.com/docs/chat/platform-api/v3/channel/managing-a-channel/hide-a-channel#1-hide-a-channel)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hideAChannelTest() throws ApiException {
        //String channelUrl = null;
        //String apiToken = null;
        //HideAChannelRequest hideAChannelRequest = null;
        //Object response = api.hideAChannel(channelUrl)
        //        .apiToken(apiToken)
        //        .hideAChannelRequest(hideAChannelRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Invite as members
     *
     * ## Invite as members  Invites one or more users as members to a group channel. Users can join a group channel immediately after receiving an invitation, without having to accept it. To give users an option to accept or decline an invitation, see [update default channel invitation preference](https://sendbird.com/docs/chat/platform-api/v3/channel/setting-up-channels/update-default-invitation-preference) or [update channel invitation preference](https://sendbird.com/docs/chat/platform-api/v3/channel/managing-a-channel/update-channel-invitation-preference). See [this page](https://sendbird.com/docs/chat/platform-api/v3/channel/channel-overview#2-channel-types-3-open-channel-vs-group-channel-vs-supergroup-channel) to learn more about channel types.  &gt; **Note**: By default, [blocked users](https://sendbird.com/docs/chat/platform-api/v3/moderation/blocking-users/block-users) are included when sending invitations. If you wish to exclude blocked users, [contact our sales team](https://get.sendbird.com/talk-to-sales.html).      [https://sendbird.com/docs/chat/platform-api/v3/channel/inviting-a-user/invite-as-members-channel#1-invite-as-members](https://sendbird.com/docs/chat/platform-api/v3/channel/inviting-a-user/invite-as-members-channel#1-invite-as-members)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inviteAsMembersTest() throws ApiException {
        //String channelUrl = null;
        //String apiToken = null;
        //InviteAsMembersRequest inviteAsMembersRequest = null;
        //InviteAsMembersResponse response = api.inviteAsMembers(channelUrl)
        //        .apiToken(apiToken)
        //        .inviteAsMembersRequest(inviteAsMembersRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Join a channel
     *
     * ## Join a channel  This API allows a user to join aÂ [public](https://sendbird.com/docs/chat/platform-api/v3/channel/channel-overview#4-group-channel-types)Â group channel. Users can only join public group channels where theÂ &#x60;is_public&#x60;Â property is set toÂ &#x60;true&#x60;Â using this API. A single user can join up to 2,000 group channels, and a user who reaches the capacity canât join a new channel. SeeÂ [this page](https://sendbird.com/docs/chat/platform-api/v3/channel/channel-overview#2-channel-types-3-open-channel-vs-group-channel-vs-supergroup-channel)Â to learn more about channel types.  [https://sendbird.com/docs/chat/platform-api/v3/channel/managing-a-channel/join-a-channel#1-join-a-channel](https://sendbird.com/docs/chat/platform-api/v3/channel/managing-a-channel/join-a-channel#1-join-a-channel)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void joinAChannelTest() throws ApiException {
        //String channelUrl = null;
        //String apiToken = null;
        //JoinAChannelRequest joinAChannelRequest = null;
        //SendbirdGroupChannelDetail response = api.joinAChannel(channelUrl)
        //        .apiToken(apiToken)
        //        .joinAChannelRequest(joinAChannelRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Leave a channel
     *
     * ## Leave a channel  Makes one or more members leave a group channel.  https://sendbird.com/docs/chat/v3/platform-api/guides/group-channel#2-leave-a-channel ----------------------------
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leaveAChannelTest() throws ApiException {
        //String channelUrl = null;
        //String apiToken = null;
        //LeaveAChannelRequest leaveAChannelRequest = null;
        //Object response = api.leaveAChannel(channelUrl)
        //        .apiToken(apiToken)
        //        .leaveAChannelRequest(leaveAChannelRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * List channels
     *
     * ## List group channels  This action retrieves a list ofÂ [group channels](https://sendbird.com/docs/chat/platform-api/v3/channel/channel-overview#2-channel-types-3-group-channel). You can use various query parameters to determine the search scope and select what kind of information you want to receive about the queried channels.  If you want to retrieve a list of group channels that a specific user has joined, use theÂ [list group channels by user](https://sendbird.com/docs/chat/platform-api/v3/user/managing-joined-group-channels/list-group-channels-by-user)Â action under the User section.  https://sendbird.com/docs/chat/platform-api/v3/channel/listing-channels-in-an-application/list-group-channels#1-list-group-channels
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listChannelsTest() throws ApiException {
        //String apiToken = null;
        //String token = null;
        //Integer limit = null;
        //String distinctMode = null;
        //String publicMode = null;
        //String superMode = null;
        //Long createdAfter = null;
        //Long createdBefore = null;
        //Boolean showEmpty = null;
        //Boolean showMember = null;
        //Boolean showDeliveryReceipt = null;
        //Boolean showReadReceipt = null;
        //Boolean showMetadata = null;
        //Boolean showFrozen = null;
        //String order = null;
        //String metadataOrderKey = null;
        //String customTypes = null;
        //String customTypeStartswith = null;
        //String channelUrls = null;
        //String name = null;
        //String nameContains = null;
        //String nameStartswith = null;
        //String membersExactlyIn = null;
        //String membersIncludeIn = null;
        //String queryType = null;
        //String membersNickname = null;
        //String membersNicknameContains = null;
        //String metadataKey = null;
        //String metadataValues = null;
        //String metadataValueStartswith = null;
        //String metacounterKey = null;
        //String metacounterValues = null;
        //String metacounterValueGt = null;
        //String metacounterValueGte = null;
        //String metacounterValueLt = null;
        //String metacounterValueLte = null;
        //Boolean includeSortedMetaarrayInLastMessage = null;
        //String customType = null;
        //Boolean readReceipt = null;
        //Boolean member = null;
        //Boolean isDistinct = null;
        //String membersIn = null;
        //String userId = null;
        //GroupChatListChannelsResponse response = api.listChannels()
        //        .apiToken(apiToken)
        //        .token(token)
        //        .limit(limit)
        //        .distinctMode(distinctMode)
        //        .publicMode(publicMode)
        //        .superMode(superMode)
        //        .createdAfter(createdAfter)
        //        .createdBefore(createdBefore)
        //        .showEmpty(showEmpty)
        //        .showMember(showMember)
        //        .showDeliveryReceipt(showDeliveryReceipt)
        //        .showReadReceipt(showReadReceipt)
        //        .showMetadata(showMetadata)
        //        .showFrozen(showFrozen)
        //        .order(order)
        //        .metadataOrderKey(metadataOrderKey)
        //        .customTypes(customTypes)
        //        .customTypeStartswith(customTypeStartswith)
        //        .channelUrls(channelUrls)
        //        .name(name)
        //        .nameContains(nameContains)
        //        .nameStartswith(nameStartswith)
        //        .membersExactlyIn(membersExactlyIn)
        //        .membersIncludeIn(membersIncludeIn)
        //        .queryType(queryType)
        //        .membersNickname(membersNickname)
        //        .membersNicknameContains(membersNicknameContains)
        //        .metadataKey(metadataKey)
        //        .metadataValues(metadataValues)
        //        .metadataValueStartswith(metadataValueStartswith)
        //        .metacounterKey(metacounterKey)
        //        .metacounterValues(metacounterValues)
        //        .metacounterValueGt(metacounterValueGt)
        //        .metacounterValueGte(metacounterValueGte)
        //        .metacounterValueLt(metacounterValueLt)
        //        .metacounterValueLte(metacounterValueLte)
        //        .includeSortedMetaarrayInLastMessage(includeSortedMetaarrayInLastMessage)
        //        .customType(customType)
        //        .readReceipt(readReceipt)
        //        .member(member)
        //        .isDistinct(isDistinct)
        //        .membersIn(membersIn)
        //        .userId(userId)
        //        .execute();
        // TODO: test validations
    }

    /**
     * List members
     *
     * ## List members  Retrieves a list of members of a group channel.  &gt; **Note**: See [this page](https://sendbird.com/docs/chat/platform-api/v3/channel/channel-overview#2-channel-types-3-open-channel-vs-group-channel-vs-supergroup-channel) to learn more about channel types.      [https://sendbird.com/docs/chat/platform-api/v3/channel/listing-users/list-members-of-a-group-channel#1-list-members-of-a-group-channel](https://sendbird.com/docs/chat/platform-api/v3/channel/listing-users/list-members-of-a-group-channel#1-list-members-of-a-group-channel)  &#x60;channel_url&#x60;   Type: string   Description: Specifies the URL of the channel to retrieve a list of members of.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMembersTest() throws ApiException {
        //String channelUrl = null;
        //String token = null;
        //Integer limit = null;
        //String userId = null;
        //Boolean showDeliveryReceipt = null;
        //Boolean showReadReceipt = null;
        //Boolean showMemberIsMuted = null;
        //String order = null;
        //String operatorFilter = null;
        //String memberStateFilter = null;
        //String mutedMemberFilter = null;
        //String memberActiveModeFilter = null;
        //String nicknameStartswith = null;
        //Boolean includePushPreference = null;
        //String apiToken = null;
        //GroupChannelListMembersResponse response = api.listMembers(channelUrl)
        //        .token(token)
        //        .limit(limit)
        //        .userId(userId)
        //        .showDeliveryReceipt(showDeliveryReceipt)
        //        .showReadReceipt(showReadReceipt)
        //        .showMemberIsMuted(showMemberIsMuted)
        //        .order(order)
        //        .operatorFilter(operatorFilter)
        //        .memberStateFilter(memberStateFilter)
        //        .mutedMemberFilter(mutedMemberFilter)
        //        .memberActiveModeFilter(memberActiveModeFilter)
        //        .nicknameStartswith(nicknameStartswith)
        //        .includePushPreference(includePushPreference)
        //        .apiToken(apiToken)
        //        .execute();
        // TODO: test validations
    }

    /**
     * List operators
     *
     * ## List operators  You can retrieve a list of operators of a group channel using this API.  https://sendbird.com/docs/chat/platform-api/v3/user/assigning-a-user-role/list-operators-of-a-group-channel#1-list-operators-of-a-group-channel  &#x60;channel_url&#x60;   Type: string   Description: Specifies the URL of the channel to retrieve a list of operators.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listOperatorsTest() throws ApiException {
        //String channelUrl = null;
        //String token = null;
        //Integer limit = null;
        //String apiToken = null;
        //ListOperatorsResponse response = api.listOperators(channelUrl)
        //        .token(token)
        //        .limit(limit)
        //        .apiToken(apiToken)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Register operators to a group channel
     *
     * ## Register operators to a group channel  You can register one or more operators to a group channel using this API.  https://sendbird.com/docs/chat/platform-api/v3/user/assigning-a-user-role/register-operators-to-a-group-channel#1-register-operators-to-a-group-channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registerOperatorsToAGroupChannelTest() throws ApiException {
        //String channelUrl = null;
        //String apiToken = null;
        //RegisterOperatorsToAGroupChannelRequest registerOperatorsToAGroupChannelRequest = null;
        //Object response = api.registerOperatorsToAGroupChannel(channelUrl)
        //        .apiToken(apiToken)
        //        .registerOperatorsToAGroupChannelRequest(registerOperatorsToAGroupChannelRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Reset chat history
     *
     * ## Reset chat history  This action resets the properties related to a specific user&#39;s chat history in aÂ [group channel](https://sendbird.com/docs/chat/platform-api/v3/channel/channel-overview#2-channel-types-3-group-channel), clearing existing messages in a channel from only the specified user&#39;s end. Because this action doesn&#39;t delete messages from the Sendbird database, other members in the channel can still retrieve and see the messages.  This action clears the messages for the specified user by updating theÂ &#x60;last_message&#x60;Â andÂ &#x60;read_receipt&#x60;Â properties of theÂ [group channel resource](https://sendbird.com/docs/chat/platform-api/v3/channel/channel-overview#4-list-of-properties-for-group-channels)Â in addition to other internally managed data such as the count of a user&#39;s unread messages.  Using theÂ &#x60;reset_all&#x60;Â property, you can also reset the properties related to the chat history of all members in a group channel.  https://sendbird.com/docs/chat/platform-api/v3/channel/managing-a-channel/reset-chat-history#1-reset-chat-history
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resetChatHistoryTest() throws ApiException {
        //String channelUrl = null;
        //String apiToken = null;
        //ResetChatHistoryRequest resetChatHistoryRequest = null;
        //ResetChatHistoryResponse response = api.resetChatHistory(channelUrl)
        //        .apiToken(apiToken)
        //        .resetChatHistoryRequest(resetChatHistoryRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Start typing indicators
     *
     * ## Start typing indicators  You can start showing a typing indicator using this API. Seeing whether other users are typing can help a more interactive conversation environment by showing real-time engagement of other users.  If you&#39;re looking for an easy way to show typing indicators on your app, check out Sendbird UIKit for a ready-to-use UI feature that can be customized to fit your needs.  https://sendbird.com/docs/chat/platform-api/v3/channel/managing-typing-indicators/start-typing-indicators#1-start-typing-indicators  &#x60;channel_url&#x60;   Type: string   Description: Specifies the URL of the channel to set typing indicators.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startTypingIndicatorsTest() throws ApiException {
        //String channelUrl = null;
        //String apiToken = null;
        //StartTypingIndicatorsRequest startTypingIndicatorsRequest = null;
        //Object response = api.startTypingIndicators(channelUrl)
        //        .apiToken(apiToken)
        //        .startTypingIndicatorsRequest(startTypingIndicatorsRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Stop typing indicators
     *
     * ## Stop typing indicators  You can stop showing a typing indicator using this API. To signal that a user is no longer typing, you can let the indicator disappear when the user sends a message or completely deletes the message text.  https://sendbird.com/docs/chat/platform-api/v3/channel/managing-typing-indicators/stop-typing-indicators#1-stop-typing-indicators  &#x60;channel_url&#x60;   Type: string   Description: Specifies the URL of the channel to set typing indicators.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void stopTypingIndicatorsTest() throws ApiException {
        //String channelUrl = null;
        //String apiToken = null;
        //StartTypingIndicatorsRequest startTypingIndicatorsRequest = null;
        //Object response = api.stopTypingIndicators(channelUrl)
        //        .apiToken(apiToken)
        //        .startTypingIndicatorsRequest(startTypingIndicatorsRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Unhide a channel
     *
     * ## Unhide a channel  This action lets a hidden [group channel](https://sendbird.com/docs/chat/platform-api/v3/channel/channel-overview#2-channel-types-3-group-channel) reappear on the channel list of a specific user or every member in the group channel. Hiding or unhiding a channel lets users organize their channel list based on those that require the most attention. Note that only group channels can be hidden or unhidden.  [https://sendbird.com/docs/chat/platform-api/v3/channel/managing-a-channel/unhide-a-channel#1-unhide-a-channel](https://sendbird.com/docs/chat/platform-api/v3/channel/managing-a-channel/unhide-a-channel#1-unhide-a-channel)  &#x60;channel_url&#x60;   Type: string   Description: Specifies the URL of the channel to unhide or unarchive.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unhideAChannelTest() throws ApiException {
        //String channelUrl = null;
        //String userId = null;
        //Boolean shouldUnhideAll = null;
        //String apiToken = null;
        //Object response = api.unhideAChannel(channelUrl)
        //        .userId(userId)
        //        .shouldUnhideAll(shouldUnhideAll)
        //        .apiToken(apiToken)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Update a group channel
     *
     * ## Update a group channel  You can update information about a group channel or a Supergroup channel using this API. You can&#39;t make any changes to the members of a channel with this API. To change members, seeÂ [invite as members](https://sendbird.com/docs/chat/platform-api/v3/channel/inviting-a-user/invite-as-members-channel)Â instead. SeeÂ [this page](https://sendbird.com/docs/chat/platform-api/v3/channel/channel-overview#2-channel-types-3-open-channel-vs-group-channel-vs-supergroup-channel)Â to learn more about channel types.  https://sendbird.com/docs/chat/platform-api/v3/channel/managing-a-channel/update-a-group-channel#1-update-a-group-channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAGroupChannelTest() throws ApiException {
        //String channelUrl = null;
        //String apiToken = null;
        //UpdateAGroupChannelRequest updateAGroupChannelRequest = null;
        //SendbirdGroupChannelDetail response = api.updateAGroupChannel(channelUrl)
        //        .apiToken(apiToken)
        //        .updateAGroupChannelRequest(updateAGroupChannelRequest)
        //        .execute();
        // TODO: test validations
    }

}
