/*
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.sendbird.client.api;

import org.sendbird.client.*;
import org.sendbird.client.auth.*;
import org.openapitools.client.model.AddExtraDataToAMessageRequest;
import org.openapitools.client.model.AddExtraDataToAMessageResponse;
import org.openapitools.client.model.GetTotalNumberOfMessagesInAChannelResponse;
import org.openapitools.client.model.ListMessagesResponse;
import org.openapitools.client.model.MarkChannelMessagesAsReadRequest;
import org.openapitools.client.model.SendAMessageRequest;
import org.openapitools.client.model.SendbirdMessageResponse;
import org.openapitools.client.model.UpdateAMessageRequest;
import org.openapitools.client.model.UpdateExtraDataInAMessageRequest;
import org.openapitools.client.model.UpdateExtraDataInAMessageResponse;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MessageApi
 */
public class MessageApiTest {

    private final MessageApi api = new MessageApi();

    /**
     * Add extra data to a message
     *
     * ## Add extra data to a message  Adds one or more key-values items which store additional information for a message.  https://sendbird.com/docs/chat/platform-api/v3/message/messaging-basics/message-add-metadata#1-add-metadata ----------------------------
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addExtraDataToAMessageTest() throws ApiException {
        //String channelType = null;
        //String channelUrl = null;
        //String messageId = null;
        //String apiToken = null;
        //AddExtraDataToAMessageRequest addExtraDataToAMessageRequest = null;
        //AddExtraDataToAMessageResponse response = api.addExtraDataToAMessage(channelType, channelUrl, messageId)
        //        .apiToken(apiToken)
        //        .addExtraDataToAMessageRequest(addExtraDataToAMessageRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Delete a message
     *
     * ## Delete a message  Deletes a message from a channel.  https://sendbird.com/docs/chat/platform-api/v3/message/messaging-basics/delete-a-message#1-delete-a-message ----------------------------
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAMessageTest() throws ApiException {
        //String channelType = null;
        //String channelUrl = null;
        //String messageId = null;
        //String apiToken = null;
        //Object response = api.deleteAMessage(channelType, channelUrl, messageId)
        //        .apiToken(apiToken)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Get a message
     *
     * ## Get a message  Retrieves information on a specific message.  https://sendbird.com/docs/chat/platform-api/v3/message/messaging-basics/get-a-message#1-get-a-message ----------------------------   &#x60;channel_type&#x60;      Type: string      Description: Specifies the type of the channel. Either open_channels or group_channels.  &#x60;channel_url&#x60;      Type: string      Description: Specifies the URL of the target channel.  &#x60;message_id&#x60;      Type: long      Description: Specifies the unique ID of the message to retrieve.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAMessageTest() throws ApiException {
        //String channelType = null;
        //String channelUrl = null;
        //String messageId = null;
        //Boolean includeReactions = null;
        //Boolean includeThreadInfo = null;
        //Boolean includeParentMessageInfo = null;
        //Boolean includePollDetails = null;
        //Boolean withSortedMetaArray = null;
        //String apiToken = null;
        //SendbirdMessageResponse response = api.getAMessage(channelType, channelUrl, messageId)
        //        .includeReactions(includeReactions)
        //        .includeThreadInfo(includeThreadInfo)
        //        .includeParentMessageInfo(includeParentMessageInfo)
        //        .includePollDetails(includePollDetails)
        //        .withSortedMetaArray(withSortedMetaArray)
        //        .apiToken(apiToken)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Get total number of messages in a channel
     *
     * ## Get total number of messages in a channel  Retrieves the total number of messages in a specific channel.  https://sendbird.com/docs/chat/platform-api/v3/message/messaging-basics/get-total-number-of-messages-in-a-channel#1-get-total-number-of-messages-in-a-channel ----------------------------
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTotalNumberOfMessagesInAChannelTest() throws ApiException {
        //String channelType = null;
        //String channelUrl = null;
        //String apiToken = null;
        //GetTotalNumberOfMessagesInAChannelResponse response = api.getTotalNumberOfMessagesInAChannel(channelType, channelUrl)
        //        .apiToken(apiToken)
        //        .execute();
        // TODO: test validations
    }

    /**
     * List messages
     *
     * ## List messages  You can retrieve a list of past messages of a specific channel with this API.  By default, this action returns a list of messages in the order they were created. Replies in threaded messages are also listed in the chronological order of their creation like other messages, not grouped with their parent messages.  https://sendbird.com/docs/chat/platform-api/v3/message/messaging-basics/list-messages#1-list-messages  &#x60;channel_type&#x60;   Type: string   Description: Specifies the type of the channel. Either open_channels or group_channels.   &#x60;channel_url&#x60;   Type: string   Description: Specifies the URL of the channel to retrieve a list of past messages.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMessagesTest() throws ApiException {
        //String channelType = null;
        //String channelUrl = null;
        //Long messageTs = null;
        //Long messageId = null;
        //Integer prevLimit = null;
        //Integer nextLimit = null;
        //Boolean include = null;
        //Boolean reverse = null;
        //String senderId = null;
        //String senderIds = null;
        //String operatorFilter = null;
        //String customTypes = null;
        //String messageType = null;
        //Boolean includingRemoved = null;
        //Boolean includeReactions = null;
        //String includeReplyType = null;
        //Boolean includeParentMessageInfo = null;
        //Boolean includeThreadInfo = null;
        //Boolean includePollDetails = null;
        //Boolean withSortedMetaArray = null;
        //Boolean showSubchannelMessagesOnly = null;
        //String userId = null;
        //String apiToken = null;
        //ListMessagesResponse response = api.listMessages(channelType, channelUrl)
        //        .messageTs(messageTs)
        //        .messageId(messageId)
        //        .prevLimit(prevLimit)
        //        .nextLimit(nextLimit)
        //        .include(include)
        //        .reverse(reverse)
        //        .senderId(senderId)
        //        .senderIds(senderIds)
        //        .operatorFilter(operatorFilter)
        //        .customTypes(customTypes)
        //        .messageType(messageType)
        //        .includingRemoved(includingRemoved)
        //        .includeReactions(includeReactions)
        //        .includeReplyType(includeReplyType)
        //        .includeParentMessageInfo(includeParentMessageInfo)
        //        .includeThreadInfo(includeThreadInfo)
        //        .includePollDetails(includePollDetails)
        //        .withSortedMetaArray(withSortedMetaArray)
        //        .showSubchannelMessagesOnly(showSubchannelMessagesOnly)
        //        .userId(userId)
        //        .apiToken(apiToken)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Mark all messages as read
     *
     * ## Mark all messages as read  Marks all messages in a group channel as read for a specific user. This action is only applicable for users in a group channel.  https://sendbird.com/docs/chat/platform-api/v3/message/read-receipts/mark-all-messages-as-read-message#1-mark-all-messages-as-read
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void markChannelMessagesAsReadTest() throws ApiException {
        //String channelUrl = null;
        //String apiToken = null;
        //MarkChannelMessagesAsReadRequest markChannelMessagesAsReadRequest = null;
        //Object response = api.markChannelMessagesAsRead(channelUrl)
        //        .apiToken(apiToken)
        //        .markChannelMessagesAsReadRequest(markChannelMessagesAsReadRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Migrate messages
     *
     * ## Migrate messages  Using our migration API, you can migrate the messages from another system into a Sendbird system&#39;s [channel](https://sendbird.com/docs/chat/v3/platform-api/guides/channel-types) which consists of users, messages, and other chat-related data.  &gt; To turn on this feature, [contact our support team](https://dashboard.sendbird.com/settings/contact_us).      There are three things to do in advance before the migration. Follow the instructions below:  1. Register the users of your current chat solution to your Sendbird application. You can migrate the users into the Sendbird system using the [user creation API](https://sendbird.com/docs/chat/v3/platform-api/guides/user#2-create-a-user).      2. Create either an [open](https://sendbird.com/docs/chat/v3/platform-api/guides/open-channel#2-create-a-channel) or a [group](https://sendbird.com/docs/chat/v3/platform-api/guides/group-channel#2-create-a-channel) channel to migrate the messages of your chat solution. The Sendbird system doesn&#39;t create a channel for your migration automatically.      3. The maximum number of migrated messages per call is 100. To avoid the failure during your migration, you must adjust the number of messages to process at once via the API.       https://sendbird.com/docs/chat/platform-api/v3/message/migration/migrate-messages#1-migrate-messages
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void migrateMessagesTest() throws ApiException {
        //String targetChannelUrl = null;
        //String apiToken = null;
        //Object body = null;
        //Object response = api.migrateMessages(targetChannelUrl)
        //        .apiToken(apiToken)
        //        .body(body)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Remove extra data from a message
     *
     * ## Remove extra data from a message  Removes specific items from a message by their keys.  https://sendbird.com/docs/chat/platform-api/v3/message/messaging-basics/message-remove-metadata#1-remove-metadata ----------------------------
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeExtraDataFromAMessageTest() throws ApiException {
        //String channelType = null;
        //String channelUrl = null;
        //String messageId = null;
        //String keys = null;
        //String apiToken = null;
        //Object response = api.removeExtraDataFromAMessage(channelType, channelUrl, messageId)
        //        .keys(keys)
        //        .apiToken(apiToken)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Send a message
     *
     * ## Send a message  You can use this action to send a text message, a file message, or an admin message to a specific channel. Sendbird Chat SDKs and the platform API allows you to upload any type of files in messages to the Sendbird server. See [Message Overview](https://sendbird.com/docs/chat/platform-api/v3/message/message-overview) for more information on each message type. Messages are sent between client devices running the Sendbird Chat SDK or UIKit as well as programmatically from businesses to their customers. For instance, a delivery app can automatically send a message like \&quot;Arriving in one minute!\&quot; on behalf of a delivery driver.  https://sendbird.com/docs/chat/platform-api/v3/message/messaging-basics/send-a-message#1-send-a-message ----------------------------
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendAMessageTest() throws ApiException {
        //String channelType = null;
        //String channelUrl = null;
        //String apiToken = null;
        //SendAMessageRequest sendAMessageRequest = null;
        //SendbirdMessageResponse response = api.sendAMessage(channelType, channelUrl)
        //        .apiToken(apiToken)
        //        .sendAMessageRequest(sendAMessageRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Update a message
     *
     * ## Update a message  Updates specific information on a message.  https://sendbird.com/docs/chat/platform-api/v3/message/messaging-basics/update-a-message#1-update-a-message ----------------------------
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAMessageTest() throws ApiException {
        //String channelType = null;
        //String channelUrl = null;
        //String messageId = null;
        //String apiToken = null;
        //UpdateAMessageRequest updateAMessageRequest = null;
        //SendbirdMessageResponse response = api.updateAMessage(channelType, channelUrl, messageId)
        //        .apiToken(apiToken)
        //        .updateAMessageRequest(updateAMessageRequest)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Update extra data in a message
     *
     * ## Update extra data in a message  Updates the values of specific items by their keys.  https://sendbird.com/docs/chat/platform-api/v3/message/messaging-basics/message-update-metadata#1-update-metadata ----------------------------
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateExtraDataInAMessageTest() throws ApiException {
        //String channelType = null;
        //String channelUrl = null;
        //String messageId = null;
        //String apiToken = null;
        //UpdateExtraDataInAMessageRequest updateExtraDataInAMessageRequest = null;
        //UpdateExtraDataInAMessageResponse response = api.updateExtraDataInAMessage(channelType, channelUrl, messageId)
        //        .apiToken(apiToken)
        //        .updateExtraDataInAMessageRequest(updateExtraDataInAMessageRequest)
        //        .execute();
        // TODO: test validations
    }

}
