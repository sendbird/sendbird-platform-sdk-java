/*
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.sendbird.client.JSON;


/**
 * ReportMessageByIdData
 */
@JsonPropertyOrder({
  ReportMessageByIdData.JSON_PROPERTY_CHANNEL_TYPE,
  ReportMessageByIdData.JSON_PROPERTY_CHANNEL_URL,
  ReportMessageByIdData.JSON_PROPERTY_MESSAGE_ID,
  ReportMessageByIdData.JSON_PROPERTY_REPORT_CATEGORY,
  ReportMessageByIdData.JSON_PROPERTY_OFFENDING_USER_ID,
  ReportMessageByIdData.JSON_PROPERTY_REPORTING_USER_ID,
  ReportMessageByIdData.JSON_PROPERTY_REPORT_DESCRIPTION
})
@JsonTypeName("reportMessageByIdData")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-24T21:22:01.103596+09:00[Asia/Seoul]")
public class ReportMessageByIdData {
  public static final String JSON_PROPERTY_CHANNEL_TYPE = "channel_type";
  private String channelType;

  public static final String JSON_PROPERTY_CHANNEL_URL = "channel_url";
  private String channelUrl;

  public static final String JSON_PROPERTY_MESSAGE_ID = "message_id";
  private String messageId;

  public static final String JSON_PROPERTY_REPORT_CATEGORY = "report_category";
  private String reportCategory;

  public static final String JSON_PROPERTY_OFFENDING_USER_ID = "offending_user_id";
  private String offendingUserId;

  public static final String JSON_PROPERTY_REPORTING_USER_ID = "reporting_user_id";
  private String reportingUserId;

  public static final String JSON_PROPERTY_REPORT_DESCRIPTION = "report_description";
  private String reportDescription;

  public ReportMessageByIdData() { 
  }

  public ReportMessageByIdData channelType(String channelType) {
    this.channelType = channelType;
    return this;
  }

   /**
   * Specifies the type of the channel. Either open_channels or group_channels.
   * @return channelType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies the type of the channel. Either open_channels or group_channels.")
  @JsonProperty(JSON_PROPERTY_CHANNEL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChannelType() {
    return channelType;
  }


  @JsonProperty(JSON_PROPERTY_CHANNEL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChannelType(String channelType) {
    this.channelType = channelType;
  }


  public ReportMessageByIdData channelUrl(String channelUrl) {
    this.channelUrl = channelUrl;
    return this;
  }

   /**
   * Specifies the URL of the channel where the message to report is in.
   * @return channelUrl
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies the URL of the channel where the message to report is in.")
  @JsonProperty(JSON_PROPERTY_CHANNEL_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChannelUrl() {
    return channelUrl;
  }


  @JsonProperty(JSON_PROPERTY_CHANNEL_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChannelUrl(String channelUrl) {
    this.channelUrl = channelUrl;
  }


  public ReportMessageByIdData messageId(String messageId) {
    this.messageId = messageId;
    return this;
  }

   /**
   * Specifies the unique ID of the message to report.
   * @return messageId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies the unique ID of the message to report.")
  @JsonProperty(JSON_PROPERTY_MESSAGE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessageId() {
    return messageId;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageId(String messageId) {
    this.messageId = messageId;
  }


  public ReportMessageByIdData reportCategory(String reportCategory) {
    this.reportCategory = reportCategory;
    return this;
  }

   /**
   * Specifies the category which indicates the reason for reporting. Acceptable values are suspicious, harassing, inappropriate, and spam.
   * @return reportCategory
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Specifies the category which indicates the reason for reporting. Acceptable values are suspicious, harassing, inappropriate, and spam.")
  @JsonProperty(JSON_PROPERTY_REPORT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReportCategory() {
    return reportCategory;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReportCategory(String reportCategory) {
    this.reportCategory = reportCategory;
  }


  public ReportMessageByIdData offendingUserId(String offendingUserId) {
    this.offendingUserId = offendingUserId;
    return this;
  }

   /**
   * Specifies the unique ID of the user who has sent the message to report.
   * @return offendingUserId
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Specifies the unique ID of the user who has sent the message to report.")
  @JsonProperty(JSON_PROPERTY_OFFENDING_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOffendingUserId() {
    return offendingUserId;
  }


  @JsonProperty(JSON_PROPERTY_OFFENDING_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOffendingUserId(String offendingUserId) {
    this.offendingUserId = offendingUserId;
  }


  public ReportMessageByIdData reportingUserId(String reportingUserId) {
    this.reportingUserId = reportingUserId;
    return this;
  }

   /**
   * Specifies the unique ID of the user who reports the message.
   * @return reportingUserId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies the unique ID of the user who reports the message.")
  @JsonProperty(JSON_PROPERTY_REPORTING_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportingUserId() {
    return reportingUserId;
  }


  @JsonProperty(JSON_PROPERTY_REPORTING_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportingUserId(String reportingUserId) {
    this.reportingUserId = reportingUserId;
  }


  public ReportMessageByIdData reportDescription(String reportDescription) {
    this.reportDescription = reportDescription;
    return this;
  }

   /**
   * Specifies additional information to be included in the report.
   * @return reportDescription
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies additional information to be included in the report.")
  @JsonProperty(JSON_PROPERTY_REPORT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportDescription() {
    return reportDescription;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportDescription(String reportDescription) {
    this.reportDescription = reportDescription;
  }


  /**
   * Return true if this reportMessageByIdData object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportMessageByIdData reportMessageByIdData = (ReportMessageByIdData) o;
    return Objects.equals(this.channelType, reportMessageByIdData.channelType) &&
        Objects.equals(this.channelUrl, reportMessageByIdData.channelUrl) &&
        Objects.equals(this.messageId, reportMessageByIdData.messageId) &&
        Objects.equals(this.reportCategory, reportMessageByIdData.reportCategory) &&
        Objects.equals(this.offendingUserId, reportMessageByIdData.offendingUserId) &&
        Objects.equals(this.reportingUserId, reportMessageByIdData.reportingUserId) &&
        Objects.equals(this.reportDescription, reportMessageByIdData.reportDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channelType, channelUrl, messageId, reportCategory, offendingUserId, reportingUserId, reportDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportMessageByIdData {\n");
    sb.append("    channelType: ").append(toIndentedString(channelType)).append("\n");
    sb.append("    channelUrl: ").append(toIndentedString(channelUrl)).append("\n");
    sb.append("    messageId: ").append(toIndentedString(messageId)).append("\n");
    sb.append("    reportCategory: ").append(toIndentedString(reportCategory)).append("\n");
    sb.append("    offendingUserId: ").append(toIndentedString(offendingUserId)).append("\n");
    sb.append("    reportingUserId: ").append(toIndentedString(reportingUserId)).append("\n");
    sb.append("    reportDescription: ").append(toIndentedString(reportDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

