/*
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.sendbird.client.JSON;


/**
 * LeaveAChannelRequest
 */
@JsonPropertyOrder({
  LeaveAChannelRequest.JSON_PROPERTY_USER_IDS,
  LeaveAChannelRequest.JSON_PROPERTY_SHOULD_LEAVE_ALL,
  LeaveAChannelRequest.JSON_PROPERTY_SHOULD_REMOVE_OPERATOR_STATUS,
  LeaveAChannelRequest.JSON_PROPERTY_REASON
})
@JsonTypeName("leaveAChannel_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-16T10:11:20.822211+07:00[Asia/Jakarta]")
public class LeaveAChannelRequest {
  public static final String JSON_PROPERTY_USER_IDS = "user_ids";
  private List<String> userIds = new ArrayList<>();

  public static final String JSON_PROPERTY_SHOULD_LEAVE_ALL = "should_leave_all";
  private Boolean shouldLeaveAll;

  public static final String JSON_PROPERTY_SHOULD_REMOVE_OPERATOR_STATUS = "should_remove_operator_status";
  private Boolean shouldRemoveOperatorStatus;

  /**
   * Specifies the reason for leaving a channel. Acceptable values are admin_removed, admin_deleted, admin_deactivated, left_by_own_choice, and channel_operator_removed.
   */
  public enum ReasonEnum {
    LEFT_BY_OWN_CHOICE("LEFT_BY_OWN_CHOICE"),
    
    CHANNEL_OPERATOR_REMOVED("CHANNEL_OPERATOR_REMOVED"),
    
    ADMIN_REMOVED("ADMIN_REMOVED"),
    
    ADMIN_DELETED("ADMIN_DELETED"),
    
    ADMIN_DEACTIVATED("ADMIN_DEACTIVATED");

    private String value;

    ReasonEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReasonEnum fromValue(String value) {
      for (ReasonEnum b : ReasonEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REASON = "reason";
  private ReasonEnum reason;

  public LeaveAChannelRequest() { 
  }

  public LeaveAChannelRequest userIds(List<String> userIds) {
    this.userIds = userIds;
    return this;
  }

  public LeaveAChannelRequest addUserIdsItem(String userIdsItem) {
    this.userIds.add(userIdsItem);
    return this;
  }

   /**
   * Specifies an array of one or more IDs of the users to leave the channel.
   * @return userIds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Specifies an array of one or more IDs of the users to leave the channel.")
  @JsonProperty(JSON_PROPERTY_USER_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getUserIds() {
    return userIds;
  }


  @JsonProperty(JSON_PROPERTY_USER_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserIds(List<String> userIds) {
    this.userIds = userIds;
  }


  public LeaveAChannelRequest shouldLeaveAll(Boolean shouldLeaveAll) {
    this.shouldLeaveAll = shouldLeaveAll;
    return this;
  }

   /**
   * Determines whether to make all members leave the channel. (Default: false)
   * @return shouldLeaveAll
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines whether to make all members leave the channel. (Default: false)")
  @JsonProperty(JSON_PROPERTY_SHOULD_LEAVE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShouldLeaveAll() {
    return shouldLeaveAll;
  }


  @JsonProperty(JSON_PROPERTY_SHOULD_LEAVE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShouldLeaveAll(Boolean shouldLeaveAll) {
    this.shouldLeaveAll = shouldLeaveAll;
  }


  public LeaveAChannelRequest shouldRemoveOperatorStatus(Boolean shouldRemoveOperatorStatus) {
    this.shouldRemoveOperatorStatus = shouldRemoveOperatorStatus;
    return this;
  }

   /**
   * Determines whether to remove a user from the channel&#39;s operator list if the user who is leaving the channel is an operator. (Default: false)
   * @return shouldRemoveOperatorStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines whether to remove a user from the channel's operator list if the user who is leaving the channel is an operator. (Default: false)")
  @JsonProperty(JSON_PROPERTY_SHOULD_REMOVE_OPERATOR_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShouldRemoveOperatorStatus() {
    return shouldRemoveOperatorStatus;
  }


  @JsonProperty(JSON_PROPERTY_SHOULD_REMOVE_OPERATOR_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShouldRemoveOperatorStatus(Boolean shouldRemoveOperatorStatus) {
    this.shouldRemoveOperatorStatus = shouldRemoveOperatorStatus;
  }


  public LeaveAChannelRequest reason(ReasonEnum reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Specifies the reason for leaving a channel. Acceptable values are admin_removed, admin_deleted, admin_deactivated, left_by_own_choice, and channel_operator_removed.
   * @return reason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the reason for leaving a channel. Acceptable values are admin_removed, admin_deleted, admin_deactivated, left_by_own_choice, and channel_operator_removed.")
  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReasonEnum getReason() {
    return reason;
  }


  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReason(ReasonEnum reason) {
    this.reason = reason;
  }


  /**
   * Return true if this leaveAChannel_request object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LeaveAChannelRequest leaveAChannelRequest = (LeaveAChannelRequest) o;
    return Objects.equals(this.userIds, leaveAChannelRequest.userIds) &&
        Objects.equals(this.shouldLeaveAll, leaveAChannelRequest.shouldLeaveAll) &&
        Objects.equals(this.shouldRemoveOperatorStatus, leaveAChannelRequest.shouldRemoveOperatorStatus) &&
        Objects.equals(this.reason, leaveAChannelRequest.reason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userIds, shouldLeaveAll, shouldRemoveOperatorStatus, reason);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LeaveAChannelRequest {\n");
    sb.append("    userIds: ").append(toIndentedString(userIds)).append("\n");
    sb.append("    shouldLeaveAll: ").append(toIndentedString(shouldLeaveAll)).append("\n");
    sb.append("    shouldRemoveOperatorStatus: ").append(toIndentedString(shouldRemoveOperatorStatus)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

